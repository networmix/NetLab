[build-system]
requires = ["setuptools>=77", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "netlab"
version = "0.1.0"
description = "Metrics and analysis tools for NetGraph scenarios."
readme = "README.md"
authors = [{ name = "Andrey Golovanov" }]
license = "MIT"
license-files = ["LICENSE"]
requires-python = ">=3.11"

classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]

# Runtime deps inferred from imports
dependencies = [
    "numpy>=1.24",
    "pandas>=2.0",
    "matplotlib>=3.7",
    "seaborn>=0.13",
    "scipy>=1.11",
    "rich>=13.0",
    "ngraph>=0.9.1",
    "topogen @ git+https://github.com/networmix/TopoGen@main",
]

[project.optional-dependencies]
dev = [
    # testing
    "pytest>=8",
    "pytest-cov",
    "pytest-benchmark",
    "pytest-mock",
    "pytest-timeout",
    # style + typing
    "ruff==0.11.13",
    "pyright==1.1.401",
    "pandas-stubs",
    # pre-commit
    "pre-commit",
    # build/publish (optional)
    "build",
    "twine",
]

[tool.pytest.ini_options]
addopts = "--cov=./ --cov-report term-missing --benchmark-disable-gc --benchmark-min-rounds=5 --benchmark-warmup=on"
timeout = 30
markers = [
    "benchmark: marks tests as performance benchmarks (run with '-m benchmark')",
]

[tool.coverage.run]
source = ["."]
omit = ["*/tests/*", "*/test_*", "*/conftest.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.setuptools.packages.find]
include = ["metrics*", "netlab*"]
exclude = ["tests*"]

[project.scripts]
netlab = "netlab.cli:main"

[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "B", "I"]
ignore = ["E501"]
fixable = ["ALL"]

[tool.ruff.lint.isort]
known-first-party = ["metrics"]

[tool.ruff.format]
quote-style = "double"
skip-magic-trailing-comma = false

[tool.pyright]
typeCheckingMode = "standard"
pythonVersion = "3.11"
venvPath = "."
venv = "netlab-venv"
exclude = [
    "tests/**",
    "**/venv/**",
    "**/*venv/**",
    "build/**",
    "dist/**",
    "**/__pycache__/**",
    "**/*.egg-info/**",
]
reportMissingTypeStubs = "warning"
reportUnknownMemberType = "none"
reportUnknownVariableType = "none"
reportUnknownArgumentType = "none"
